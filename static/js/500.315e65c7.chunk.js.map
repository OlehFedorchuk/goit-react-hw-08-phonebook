{"version":3,"file":"static/js/500.315e65c7.chunk.js","mappings":"2QAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oGAOlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mGAOpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mHASpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4U,UCnBtBO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOT,EAASS,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEN,EAUA,OACEC,EAAAA,EAAAA,MAAChC,EAAI,CAACiC,SATa,SAAAC,GACnBA,EAAEC,iBACFxB,EAASyB,EAAAA,EAAAA,SAAwB,CAAEnB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAChDP,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAGgCW,aAAa,MAAKC,SAAA,EAC9CN,EAAAA,EAAAA,MAAC5B,EAAK,CAAAkC,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACjC,EAAK,CACJkC,KAAK,OACLvB,KAAK,OACLc,MAAOd,EACPwB,SAAUd,EACVe,YAAY,kBACZC,QAAQ,YACRC,MAAM,uEACNC,UAAQ,QAGZb,EAAAA,EAAAA,MAAC5B,EAAK,CAAAkC,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACjC,EAAK,CACJkC,KAAK,QACLvB,KAAK,QACLc,MAAOV,EACPoB,SAAUd,EACVe,YAAY,mBACZC,QAAQ,oDACRE,UAAQ,QAGZb,EAAAA,EAAAA,MAAC5B,EAAK,CAAAkC,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACjC,EAAK,CACJkC,KAAK,WACLvB,KAAK,WACLc,MAAON,EACPgB,SAAUd,EACVe,YAAY,sBACZC,QAAQ,6CACRC,MAAM,sGACNC,UAAQ,QAGZN,EAAAA,EAAAA,KAAC/B,EAAM,CAACgC,KAAK,SAAQF,SAAC,eAG5B,ECzEe,SAASQ,IACtB,OACEd,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAT,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAAC7B,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 12px;\n  \n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 20px;\n  border: none;\n  font-size: 20px;\n  color: black;\n  transition: transform 250ms linear, box-shadow 250ms linear;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 6px 12px lightblue, inset 0px -6px 12px lightblue;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/auth-operations';\n\nimport { Button, Form, Input, Label } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name\"\n          pattern=\"^[^\\d]+$\"\n          title=\"The name must contain only letters, apostrophes, hyphens and indents\"\n          required\n        />\n      </Label>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"example@mail.com\"\n          pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n          required\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Enter your password\"\n          pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n          title=\"The password must contain only Latin letters (both upper and lower case), numbers and other symbols\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","_ref","_ref$target","target","value","_jsxs","onSubmit","e","preventDefault","authOperations","autoComplete","children","_jsx","type","onChange","placeholder","pattern","title","required","RegisterPage","Helmet"],"sourceRoot":""}